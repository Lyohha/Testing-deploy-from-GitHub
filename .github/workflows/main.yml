name: "Build and deploy"

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Push to registry
    runs-on: ubuntu-latest

    steps:
      - name: Checkout and login
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          # tags: ${{ github.sha }}
          tags: latest
    
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io  # GitHub Container Registry
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  deploy:
    name: Deploy
    needs: build
    runs-on: [self-hosted]

    steps:
      - name: Checkout and login
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          # tags: ${{ github.sha }}
          tags: latest
      
      - name: Set env
        run: echo "GH_REGISTRY_IMAGE=${{ steps.meta.outputs.tags }}" >> $GITHUB_ENV
      
      - name: Remote auth in docker registry and fill env
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_SERVER }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} ghcr.io
            rm -rf ${{ github.event.repository.name }}
            mkdir ${{ github.event.repository.name }}
            echo "GH_REGISTRY_IMAGE=${{ steps.meta.outputs.tags }}" >> ${{ github.event.repository.name }}/.env
      
      - name: Copy docker compose file
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_SERVER }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: ${{ github.event.repository.name }}
      
      - name: Stop previous docker compose file and start new
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_SERVER }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker compose -f "${{ github.event.repository.name }}/docker-compose.yml" down --remove-orphans
            docker compose -f "${{ github.event.repository.name }}/docker-compose.yml" pull
            docker compose -f "${{ github.event.repository.name }}/docker-compose.yml" up -d